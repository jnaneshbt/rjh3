/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package subscriber;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import org.eclipse.paho.client.mqttv3.MqttMessage;

/**
 *
 * @author jnaneshbt
 */
public class ui extends javax.swing.JFrame {

    Timer timer = new Timer();
    private  Subscriber iotSub = new Subscriber();

    /**
     * Creates new form ui
     */
    public ui() {
        initComponents();

        TimerTask task = new TimerTask() {
            public void run() {
                //timer.schedule(this, 200);
                // timer.
                setup();

            }
        };

        timer.schedule(task, 200,100);

    }

    int tl = 0;
    String topicList[] = {
        "Temperature",
        "Humidity",
        "WeighScale",
     //   "Gravity",
        null

    };

    public void setup() {

        //while (true)
        {
            if (topicList[tl] == null) {
                timer.cancel();
                return;
            } else {
                topic_subscribe(topicList[tl]);
            }

            tl++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        topicTextField = new javax.swing.JTextField();
        subscribeButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        brokerHostId = new javax.swing.JTextField();
        connectButton = new javax.swing.JButton();
        TabPane = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        LogArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IoT SUBSCRIBER");

        jLabel1.setText("TOPIC NAME:");

        topicTextField.setToolTipText("Enter topic name");

        subscribeButton.setText("SUBSCRIBE");
        subscribeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subscribeButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("BROKER HOST ID:");

        brokerHostId.setText("tcp://localhost:1883");

        connectButton.setText("CONNECT");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        LogArea.setEditable(false);
        LogArea.setColumns(20);
        LogArea.setRows(1);
        LogArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(LogArea);

        TabPane.addTab("Message", jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(212, 212, 212))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(topicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(subscribeButton))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(brokerHostId, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(connectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addComponent(TabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brokerHostId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectButton))
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subscribeButton)
                    .addComponent(topicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TabPane, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public int getTabIndex(String title) {
        int i = -1;
        for (i = 0; i < TabPane.getTabCount(); i++) {

            String str = TabPane.getTitleAt(i);
            if (title.compareToIgnoreCase(str) == 0) {
                return i;
            }
        }
        return -1;
    }
    List<JTextArea> listAreas = new ArrayList<JTextArea>();

    public void topic_subscribe(String topic) {
        if (getTabIndex(topic) == -1) {
            JTextArea jt = new JTextArea();

            jt.setEditable(false);
            jt.setColumns(20);
            jt.setRows(1);
            jt.setWrapStyleWord(true);
            JScrollPane jsp = new JScrollPane();
            jsp.setViewportView(jt);

            TabPane.addTab(topic, jsp);
            listAreas.add(jt);
            iotSub.subscribe(topic);
        }
    }

    private void subscribeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subscribeButtonActionPerformed

        String topic = topicTextField.getText();
        if (topic != null) {
            topic_subscribe(topic);
        }
    }//GEN-LAST:event_subscribeButtonActionPerformed

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        String brkr = brokerHostId.getText();
        if (brkr != null) {
            iotSub.connect(brkr);
        }
    }//GEN-LAST:event_connectButtonActionPerformed

    public void logMsg(String message) {
        LogArea.append(message + "\n");
        LogArea.setCaretPosition(LogArea.getDocument().getLength());
    }

    GraphPlotter gp = new GraphPlotter("Temperature");

    void topicMsg(String topic, MqttMessage message) {
        int indx = this.getTabIndex(topic);
        if (indx != -1) {
            JTextArea jta = listAreas.get(indx - 1);
            if (message != null) {
                jta.append("" + message + "\n");
            }
            jta.setCaretPosition(jta.getDocument().getLength());
            gp.addToX(Integer.parseInt(message.toString()));

        }
    }

    static private ui instance = null;

    static public ui getInstance() {
        if (instance == null) {
            instance = new ui();
        }
        return instance;
    }

    public void startui() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ui.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ui.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ui.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ui.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                getInstance().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea LogArea;
    private javax.swing.JTabbedPane TabPane;
    private javax.swing.JTextField brokerHostId;
    private javax.swing.JButton connectButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton subscribeButton;
    private javax.swing.JTextField topicTextField;
    // End of variables declaration//GEN-END:variables

}
